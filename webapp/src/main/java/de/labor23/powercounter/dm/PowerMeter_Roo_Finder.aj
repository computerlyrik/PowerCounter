// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.labor23.powercounter.dm;

import de.labor23.powercounter.dm.PowerMeter;
import de.labor23.powercounter.dm.User;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect PowerMeter_Roo_Finder {
    
    public static TypedQuery<PowerMeter> PowerMeter.findPowerMetersByAddress(Byte address) {
        if (address == null) throw new IllegalArgumentException("The address argument is required");
        EntityManager em = PowerMeter.entityManager();
        TypedQuery<PowerMeter> q = em.createQuery("SELECT o FROM PowerMeter AS o WHERE o.address = :address", PowerMeter.class);
        q.setParameter("address", address);
        return q;
    }
    
    public static TypedQuery<PowerMeter> PowerMeter.findPowerMetersByUser(User user) {
        if (user == null) throw new IllegalArgumentException("The user argument is required");
        EntityManager em = PowerMeter.entityManager();
        TypedQuery<PowerMeter> q = em.createQuery("SELECT o FROM PowerMeter AS o WHERE o.user = :user", PowerMeter.class);
        q.setParameter("user", user);
        return q;
    }
    
    public static TypedQuery<PowerMeter> PowerMeter.findPowerMetersByUserIsNull() {
        EntityManager em = PowerMeter.entityManager();
        TypedQuery<PowerMeter> q = em.createQuery("SELECT o FROM PowerMeter AS o WHERE o.user IS NULL", PowerMeter.class);
        return q;
    }
    
}
